"""initial tables

Revision ID: 756bf3ca855a
Revises:
Create Date: 2025-10-03 13:22:51.339095

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "756bf3ca855a"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "account",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("account_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("ifsc_code", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_account_account_number"), "account", ["account_number"], unique=True
    )
    op.create_index(
        op.f("ix_account_ifsc_code"), "account", ["ifsc_code"], unique=False
    )
    op.create_index(op.f("ix_account_name"), "account", ["name"], unique=False)
    op.create_table(
        "invoice",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("invoice_no", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("invoice_date", sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_invoice_invoice_date"), "invoice", ["invoice_date"], unique=False
    )
    op.create_index(
        op.f("ix_invoice_invoice_no"), "invoice", ["invoice_no"], unique=True
    )
    op.create_table(
        "user",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_table(
        "bankdetails",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("invoice_no", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("account_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("ifsc_code", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("holder_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("bank_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("branch", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["invoice_no"],
            ["invoice.invoice_no"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_bankdetails_account_number"),
        "bankdetails",
        ["account_number"],
        unique=True,
    )
    op.create_index(
        op.f("ix_bankdetails_bank_name"), "bankdetails", ["bank_name"], unique=False
    )
    op.create_index(
        op.f("ix_bankdetails_branch"), "bankdetails", ["branch"], unique=False
    )
    op.create_index(
        op.f("ix_bankdetails_holder_name"), "bankdetails", ["holder_name"], unique=False
    )
    op.create_index(
        op.f("ix_bankdetails_ifsc_code"), "bankdetails", ["ifsc_code"], unique=False
    )
    op.create_table(
        "customer",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("invoice_no", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("address", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("gst_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["invoice_no"],
            ["invoice.invoice_no"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_customer_address"), "customer", ["address"], unique=False)
    op.create_index(
        op.f("ix_customer_gst_number"), "customer", ["gst_number"], unique=False
    )
    op.create_index(op.f("ix_customer_name"), "customer", ["name"], unique=False)
    op.create_table(
        "item",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("invoice_no", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("item_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("hsn_code", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("quantity", sa.Float(), nullable=True),
        sa.Column("unit_price", sa.Float(), nullable=True),
        sa.Column("unit_taxable_amount", sa.Float(), nullable=True),
        sa.Column("tax", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("unit_tax_amount", sa.Float(), nullable=True),
        sa.Column("amount", sa.Float(), nullable=True),
        sa.Column("mrp_price", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["invoice_no"],
            ["invoice.invoice_no"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_item_hsn_code"), "item", ["hsn_code"], unique=False)
    op.create_index(op.f("ix_item_item_name"), "item", ["item_name"], unique=False)
    op.create_index(op.f("ix_item_tax"), "item", ["tax"], unique=False)
    op.create_table(
        "payment",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("invoice_no", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("sub_total", sa.Float(), nullable=True),
        sa.Column("s_gst", sa.Float(), nullable=True),
        sa.Column("discount", sa.Float(), nullable=True),
        sa.Column("total", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["invoice_no"],
            ["invoice.invoice_no"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_payment_discount"), "payment", ["discount"], unique=False)
    op.create_index(op.f("ix_payment_s_gst"), "payment", ["s_gst"], unique=False)
    op.create_index(
        op.f("ix_payment_sub_total"), "payment", ["sub_total"], unique=False
    )
    op.create_index(op.f("ix_payment_total"), "payment", ["total"], unique=False)
    op.create_table(
        "seller",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("invoice_no", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("address", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("contact", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("gst_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fssai_no", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("pin_code", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["invoice_no"],
            ["invoice.invoice_no"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_seller_address"), "seller", ["address"], unique=False)
    op.create_index(op.f("ix_seller_contact"), "seller", ["contact"], unique=False)
    op.create_index(op.f("ix_seller_fssai_no"), "seller", ["fssai_no"], unique=False)
    op.create_index(
        op.f("ix_seller_gst_number"), "seller", ["gst_number"], unique=False
    )
    op.create_index(op.f("ix_seller_pin_code"), "seller", ["pin_code"], unique=False)
    op.create_table(
        "transaction",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("transaction_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("transaction_date", sa.Date(), nullable=True),
        sa.Column("withdrawal", sa.Float(), nullable=True),
        sa.Column("deposit", sa.Float(), nullable=True),
        sa.Column("balance", sa.Float(), nullable=True),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("check_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("account_number", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_number"],
            ["account.account_number"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_transaction_check_number"),
        "transaction",
        ["check_number"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transaction_description"), "transaction", ["description"], unique=False
    )
    op.create_index(
        op.f("ix_transaction_transaction_date"),
        "transaction",
        ["transaction_date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transaction_transaction_id"),
        "transaction",
        ["transaction_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_transaction_transaction_id"), table_name="transaction")
    op.drop_index(op.f("ix_transaction_transaction_date"), table_name="transaction")
    op.drop_index(op.f("ix_transaction_description"), table_name="transaction")
    op.drop_index(op.f("ix_transaction_check_number"), table_name="transaction")
    op.drop_table("transaction")
    op.drop_index(op.f("ix_seller_pin_code"), table_name="seller")
    op.drop_index(op.f("ix_seller_gst_number"), table_name="seller")
    op.drop_index(op.f("ix_seller_fssai_no"), table_name="seller")
    op.drop_index(op.f("ix_seller_contact"), table_name="seller")
    op.drop_index(op.f("ix_seller_address"), table_name="seller")
    op.drop_table("seller")
    op.drop_index(op.f("ix_payment_total"), table_name="payment")
    op.drop_index(op.f("ix_payment_sub_total"), table_name="payment")
    op.drop_index(op.f("ix_payment_s_gst"), table_name="payment")
    op.drop_index(op.f("ix_payment_discount"), table_name="payment")
    op.drop_table("payment")
    op.drop_index(op.f("ix_item_tax"), table_name="item")
    op.drop_index(op.f("ix_item_item_name"), table_name="item")
    op.drop_index(op.f("ix_item_hsn_code"), table_name="item")
    op.drop_table("item")
    op.drop_index(op.f("ix_customer_name"), table_name="customer")
    op.drop_index(op.f("ix_customer_gst_number"), table_name="customer")
    op.drop_index(op.f("ix_customer_address"), table_name="customer")
    op.drop_table("customer")
    op.drop_index(op.f("ix_bankdetails_ifsc_code"), table_name="bankdetails")
    op.drop_index(op.f("ix_bankdetails_holder_name"), table_name="bankdetails")
    op.drop_index(op.f("ix_bankdetails_branch"), table_name="bankdetails")
    op.drop_index(op.f("ix_bankdetails_bank_name"), table_name="bankdetails")
    op.drop_index(op.f("ix_bankdetails_account_number"), table_name="bankdetails")
    op.drop_table("bankdetails")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_invoice_invoice_no"), table_name="invoice")
    op.drop_index(op.f("ix_invoice_invoice_date"), table_name="invoice")
    op.drop_table("invoice")
    op.drop_index(op.f("ix_account_name"), table_name="account")
    op.drop_index(op.f("ix_account_ifsc_code"), table_name="account")
    op.drop_index(op.f("ix_account_account_number"), table_name="account")
    op.drop_table("account")
    # ### end Alembic commands ###
